<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BackendCodeEditorMiscSettings">
    <option name="/Default/Housekeeping/FeatureSuggestion/FeatureSuggestionManager/DisabledSuggesters/=SwitchToGoToActionSuggester/@EntryIndexedValue" value="true" type="bool" />
    <option name="/Default/Housekeeping/LiveTemplatesHousekeeping/HotspotSessionHintIsShown/@EntryValue" value="true" type="bool" />
    <option name="/Default/Housekeeping/OptionsDialog/SelectedPageId/@EntryValue" value="CppGeneralOptions" type="string" />
  </component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a8ea9b5d-021b-44fe-bc88-9021c0ba06e5" name="更改" comment="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <change afterPath="$PROJECT_DIR$/Thread/named_sem_bin.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Thread/named_sem_count.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Thread/thread_pool_test.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Thread/-g" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Thread/-pthread" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Thread/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Thread/Makefile" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;KozekiUii&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:KozekiUii/Linux-Applications_old.git&quot;,
    &quot;accountId&quot;: &quot;060a3f11-53f4-455d-8664-60cd13bfea83&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///dummy.cpp" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="AISelfReview" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="336WW5hJ49NyiQCBSpTJeyI0rww" />
  <component name="ProjectStatusUIService">{
  &quot;uiKindId&quot;: &quot;Widget&quot;
}</component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "C/C++ 文件.consumer.c.executor": "Run",
    "C/C++ 文件.execve_test.c.executor": "Debug",
    "C/C++ 文件.named_sem_bin.c.executor": "Run",
    "C/C++ 文件.named_sem_count.c.executor": "Run",
    "C/C++ 文件.producer.c.executor": "Run",
    "C/C++ 文件.pthread_cancel.c.executor": "Debug",
    "C/C++ 文件.unnamed_sem_bin_process.c.executor": "Run",
    "C/C++ 文件.unnamed_sem_count_process.c.executor": "Run",
    "C/C++ 文件.unnamed_sem_count_thread.c.executor": "Run",
    "Makefile 目标.named_sem_bin.c.executor": "Run",
    "Makefile 目标.named_sem_bin.executor": "Run",
    "Makefile 目标.named_sem_count.executor": "Run",
    "Makefile 目标.thread_pool_test.executor": "Run",
    "Makefile 目标.unnamed_sem_count_process.executor": "Run",
    "Makefile 目标.unnamed_sem_count_thread.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.RadMigrateCodeStyle": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/komorebi/Documents/Workspace/Linux-Applications_old/Thread",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "ml.llm.LLMConfigurable",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "ChangesTree.GroupingKeys": [
      "directory",
      "repository"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/Thread" />
    </key>
  </component>
  <component name="RunManager" selected="Makefile 目标.thread_pool_test">
    <configuration name="named_sem_bin.c" type="CppFileRunConfiguration" factoryName="CppFileRunConfiguration" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Linux-Applications_old" TARGET_NAME="named_sem_bin.c" CONFIG_NAME="named_sem_bin.c">
      <option name="sourceFile" value="Thread/named_sem_bin.c" />
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.runfile.CppFileBuildBeforeRunTaskProvider$BasicBuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="named_sem_count.c" type="CppFileRunConfiguration" factoryName="CppFileRunConfiguration" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Linux-Applications_old" TARGET_NAME="named_sem_count.c" CONFIG_NAME="named_sem_count.c">
      <option name="sourceFile" value="Thread/named_sem_count.c" />
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.runfile.CppFileBuildBeforeRunTaskProvider$BasicBuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="named_sem_bin" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Thread/Makefile" target="named_sem_bin" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="named_sem_count" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Thread/Makefile" target="named_sem_count" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="thread_pool_test" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Thread/Makefile" target="thread_pool_test" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile 目标.thread_pool_test" />
        <item itemvalue="Makefile 目标.named_sem_count" />
        <item itemvalue="Makefile 目标.named_sem_bin" />
        <item itemvalue="C/C++ 文件.named_sem_bin.c" />
        <item itemvalue="C/C++ 文件.named_sem_count.c" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="a8ea9b5d-021b-44fe-bc88-9021c0ba06e5" name="更改" comment="" />
      <created>1758638031041</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1758638031041</updated>
      <workItem from="1758638032499" duration="403000" />
      <workItem from="1758853530759" duration="568000" />
      <workItem from="1759311443815" duration="10163000" />
      <workItem from="1759382890815" duration="11769000" />
      <workItem from="1759400698539" duration="3001000" />
    </task>
    <task id="LOCAL-00001" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759317170420</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1759317170420</updated>
    </task>
    <task id="LOCAL-00002" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759317174803</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1759317174803</updated>
    </task>
    <task id="LOCAL-00003" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759317197994</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1759317197994</updated>
    </task>
    <task id="LOCAL-00004" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759326743020</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1759326743020</updated>
    </task>
    <task id="LOCAL-00005" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759326832448</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1759326832448</updated>
    </task>
    <task id="LOCAL-00006" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759326958557</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1759326958557</updated>
    </task>
    <task id="LOCAL-00007" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759327211930</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1759327211930</updated>
    </task>
    <task id="LOCAL-00008" summary="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```">
      <option name="closed" value="true" />
      <created>1759327763157</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1759327763157</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Merge branch 'main' of github.com:KozekiUii/Linux-Applications_old" />
    <MESSAGE value="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```" />
    <option name="LAST_COMMIT_MESSAGE" value="```&#10;fix(vscode): 更新调试配置中的工作目录和程序路径&#10;&#10;将 `.vscode/launch.json` 中的 `cwd` 和 `program` 路径更新为新的项目结构，确保调试功能正常运行。&#10;&#10;feat(communication): 清理 Makefile 中的冲突标记并优化构建规则&#10;&#10;移除了 `Communication/Makefile` 中残留的合并冲突标记（&lt;&lt;&lt;&lt;&lt;&lt;&lt;、=======、&gt;&gt;&gt;&gt;&gt;&gt;&gt;），并删除了冗余或错误的编译命令，使 Makefile 更加清晰且可维护。&#10;&#10;fix(communication): 解决 shared_memory.c 中的代码冲突并统一逻辑&#10;&#10;清理 `shared_memory.c` 文件中因分支合并产生的冲突内容，保留正确的行为逻辑：子进程写入数据后解除映射，父进程读取数据后再解除映射，并删除共享内存。同时规范代码格式，提升可读性。&#10;&#10;docs(thread): 为 condition_var.c 添加详细注释和文档说明&#10;&#10;为 `Thread/condition_var.c` 添加文件头注释和函数注释，明确条件变量与互斥锁的使用方式，解释生产者与消费者模型的工作机制及注意事项，提高代码可读性和可维护性。&#10;```" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Communication/erlou.c</url>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Thread/pthread_cancel.c</url>
          <line>19</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Thread/pthread_cancel.c</url>
          <line>6</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Thread/named_sem_bin.c</url>
          <line>10</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Thread/named_sem_bin.c</url>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/Thread/named_sem_count.c</url>
          <line>11</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>